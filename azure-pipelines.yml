# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: CmdLine@2
  displayName: "run npm"
  inputs:
    script: 'sudo npm install -g newman'

- task: PowerShell@2
  displayName: "Set the user and role"
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
            Write-Host “Hooking administrator users for tests”
            Write-Host “##vso[task.setvariable variable=UserName;]*<AdministratorUserName>*”
            Write-Host “##vso[task.setvariable variable=UserPassword;]*<AdministratorUserPassword>*”
            $Env:RoleName = “administrator”

- task: replacetokens@3
  inputs:
    rootDirectory: 'apitest/'
    targetFiles: '**/*.json'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: true

- task: CmdLine@2
  displayName: "Run API Tests"
  inputs:
    script: 'newman run prulead.postman_collection.json -e UAT.postman_environment.json --reporters cli,junit --reporter-junit-export Results/junitReport.xml'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/Results/*.xml'
    failTaskOnFailedTests: true
    testRunTitle: 'sample'
